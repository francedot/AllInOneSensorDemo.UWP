<UserControl x:Class="AllInOneSensorDemo.UWP.Views.Shell"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
             xmlns:controls="using:AllInOneSensorDemo.UWP.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:models="using:AllInOneSensorDemo.UWP.Models"
             d:DesignHeight="640"
             d:DesignWidth="400"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="MenuListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="LayoutRoot"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.25" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="LayoutRoot"
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{ThemeResource SystemListLowColor}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                             Storyboard.TargetName="PressedBackground"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.25" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="InnerGrid"
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{ThemeResource SystemListAccentHighColor}" />
                                            <ColorAnimation Storyboard.TargetName="ContentPresenter"
                                                            Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)"
                                                            To="White" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="InnerGrid"
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{ThemeResource SystemListAccentMediumColor}" />
                                            <ColorAnimation Storyboard.TargetName="ContentPresenter"
                                                            Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)"
                                                            To="White" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedDisabled">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="InnerGrid"
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{ThemeResource SystemBaseMediumColor}" />
                                            <ColorAnimation Storyboard.TargetName="ContentPresenter"
                                                            Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)"
                                                            To="{ThemeResource SystemBaseLowColor}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedPointerOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="InnerGrid"
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{ThemeResource SystemListAccentHighColor}" />
                                            <ColorAnimation Storyboard.TargetName="ContentPresenter"
                                                            Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)"
                                                            To="White" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedPressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="InnerGrid"
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                            To="{ThemeResource SystemListAccentHighColor}" />
                                            <ColorAnimation Storyboard.TargetName="ContentPresenter"
                                                            Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)"
                                                            To="White" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                             Storyboard.TargetName="FocusVisualWhite"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1" />
                                            <DoubleAnimation Duration="0"
                                                             Storyboard.TargetName="FocusVisualBlack"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="InnerGrid" Background="Transparent">
                                <Rectangle x:Name="PressedBackground"
                                           Fill="{ThemeResource ListBoxItemPressedBackgroundThemeBrush}"
                                           Opacity="0" />
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}" />
                                <Rectangle x:Name="FocusVisualWhite"
                                           Opacity="0"
                                           Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
                                           StrokeDashArray="1,1"
                                           StrokeDashOffset=".5"
                                           StrokeEndLineCap="Square" />
                                <Rectangle x:Name="FocusVisualBlack"
                                           Opacity="0"
                                           Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
                                           StrokeDashArray="1,1"
                                           StrokeDashOffset="1.5"
                                           StrokeEndLineCap="Square" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Background="{ThemeResource SystemChromeMediumColor}" Orientation="Horizontal">
            <Button Command="{x:Bind ViewModel.ToggleSplitViewPaneCommand}"
                    Content="&#xE700;"
                    Style="{StaticResource IconButtonStyle}" />
            <TextBlock Style="{StaticResource AppTitleTextBlockStyle}" Text="{x:Bind ViewModel.SelectedPrimaryMenuItem.DisplayName, Mode=OneWay}" />
        </StackPanel>

        <controls:SwipeableSplitView x:Name="SplitView"
                                     Grid.Row="1"
                                     IsSwipeablePaneOpen="{x:Bind ViewModel.IsSplitViewPaneOpen, Mode=TwoWay}">
            <controls:SwipeableSplitView.Pane>
                <Grid Background="{Binding ElementName=PrimaryMenu, Path=Background}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <ListBox x:Name="PrimaryMenu"
                             VerticalAlignment="Top"
                             ItemContainerStyle="{StaticResource MenuListBoxItemStyle}"
                             ItemsSource="{x:Bind ViewModel.PrimaryMenuItems}"
                             ScrollViewer.VerticalScrollMode="Disabled"
                             SelectedItem="{x:Bind ViewModel.SelectedPrimaryMenuItem, Mode=TwoWay, Converter={StaticResource ObjectToMenuItemConverter}}">
                        <ListBox.ItemTemplate>
                            <DataTemplate x:DataType="models:MenuItem">
                                <StackPanel Height="48" Orientation="Horizontal">
                                    <TextBlock Grid.RowSpan="2"
                                               Style="{StaticResource IconTextBlockStyle}"
                                               Text="{x:Bind Icon, Mode=OneWay}" />
                                    <TextBlock Grid.Column="1"
                                               Style="{StaticResource MenuTitleTextBlockStyle}"
                                               Text="{x:Bind Title, Mode=OneWay}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Grid Grid.Row="1"
                          Height="1"
                          Background="{StaticResource MaterialBlueColorBrush}" />
                    <ListBox x:Name="SecondaryMenu"
                             Grid.Row="2"
                             VerticalAlignment="Bottom"
                             ItemContainerStyle="{StaticResource MenuListBoxItemStyle}"
                             ItemsSource="{x:Bind ViewModel.SecondaryMenuItems}"
                             ScrollViewer.VerticalScrollMode="Disabled"
                             SelectedItem="{x:Bind ViewModel.SelectedSecondaryMenuItem, Mode=TwoWay, Converter={StaticResource ObjectToMenuItemConverter}}">
                        <ListBox.ItemTemplate>
                            <DataTemplate x:DataType="models:MenuItem">
                                <StackPanel Height="48" Orientation="Horizontal">
                                    <TextBlock Grid.RowSpan="2"
                                               Style="{StaticResource IconTextBlockStyle}"
                                               Text="{x:Bind Icon, Mode=OneWay}" />
                                    <TextBlock Grid.Column="1"
                                               Style="{StaticResource MenuTitleTextBlockStyle}"
                                               Text="{x:Bind Title, Mode=OneWay}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </Grid>
            </controls:SwipeableSplitView.Pane>
            <controls:SwipeableSplitView.Content>
                <Frame x:Name="Frame" SourcePageType="{x:Bind ViewModel.SelectedPageType, Mode=TwoWay}" />
            </controls:SwipeableSplitView.Content>
        </controls:SwipeableSplitView>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitView.DisplayMode" Value="CompactOverlay" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplitView.DisplayMode" Value="Overlay" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>

